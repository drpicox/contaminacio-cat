{"version":3,"sources":["components/TableMonthHour.module.css","components/Layout.tsx","store/hooks.ts","types.ts","store/filters/selectors.ts","store/history/selectors.ts","store/table/selectors.ts","components/colorScale.ts","components/TableMonthHour.tsx","store/sources/selectors.ts","store/sources/types.ts","components/ContaminantChooser.tsx","store/sources/actions.ts","components/EstacioChooser.tsx","store/filters/types.ts","components/WeekdaysChooser.tsx","store/filters/actions.ts","components/YearsChooser.tsx","App.tsx","reportWebVitals.ts","store/filters/reducers.ts","service/loadHistory.ts","store/history/types.ts","store/history/actions.ts","store/history/middleware.ts","store/history/reducers.ts","store/sources/reducers.ts","store/index.ts","index.tsx"],"names":["module","exports","NavLink","to","children","className","Layout","Navbar","bg","Nav","useTypedSelector","useSelector","HOURS","getFilters","state","filters","getFilteredHistory","createSelector","history","result","years","weekdays","filter","r","year","dayOfTheWeek","getTable","hourIndex","monthIndex","count","sum","forEach","point","month","hour","previous","newValue","getAverageTable","table","map","row","entry","Math","floor","NO2_SCALE","range","pickColor","scale","value","length","from","steps","i","fb","fa","push","MONTHS","TableMonthHour","styles","Header","RowHour","header","Cell","index","_","Row","cell","style","backgroundColor","getSources","sources","ESTACIO_CHANGED","CONTAMINANT_CHANGED","contaminants","ContaminantChooser","contaminant","ButtonGroup","name","Contaminant","current","dispatch","useDispatch","onClick","useCallback","type","Button","active","estacions","EstacioChooser","estacio","ListGroup","Estacio","Item","action","WEEKDAY_TOGGLED","YEAR_TOGGLED","weekdaysNames","WeekdaysChooser","Weekday","weekdayToggled","yearsNumbers","Array","fill","y","YearsChooser","yearToggled","App","Container","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loadHistory","a","key","localforage","getItem","csv","loadData","setItem","parseCsv","x","date","Date","data","day","getDay","getFullYear","getMonth","getDate","weekend","h01","toNumber","h02","h03","h04","h05","h06","h07","h08","h09","h10","h11","h12","h13","h14","h15","h16","h17","h18","h19","h20","h21","h22","h23","h24","nom_estacio","replace","url","fetch","request","text","split","line","HISTORY_CHANGED","LOAD_HISTORY","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","next","createLoadHistoryAction","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9589cdbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableMonthHour_table__1pQAj\",\"row\":\"TableMonthHour_row__1V9aJ\",\"header\":\"TableMonthHour_header__3KzZq\",\"cell\":\"TableMonthHour_cell__2Rx8e\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction NavLink({ to, children }: { to: string; children: React.ReactNode }) {\n  return (\n    <Link className=\"nav-link\" to={to}>\n      {children}\n    </Link>\n  );\n}\n\nexport function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      <Navbar bg=\"primary\">\n        <Nav>\n          <NavLink to=\"/\">Contaminacio-Cat</NavLink>\n        </Nav>\n      </Navbar>\n      {children}\n    </>\n  );\n}\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport { RootState } from \"./index\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const HOURS = [\n  \"h01\",\n  \"h02\",\n  \"h03\",\n  \"h04\",\n  \"h05\",\n  \"h06\",\n  \"h07\",\n  \"h08\",\n  \"h09\",\n  \"h10\",\n  \"h11\",\n  \"h12\",\n  \"h13\",\n  \"h14\",\n  \"h15\",\n  \"h16\",\n  \"h17\",\n  \"h18\",\n  \"h19\",\n  \"h20\",\n  \"h21\",\n  \"h22\",\n  \"h23\",\n  \"h24\",\n];\n\nexport interface StationPoint {\n  nom_estacio: string;\n  altitud: string;\n  latitud: string;\n  longitud: string;\n  magnitud: string;\n  contaminant: string;\n  unitats: string;\n  tipus_estacio: string;\n  area_urbana: string;\n  codi_ine: string;\n  municipi: string;\n  codi_comarca: string;\n  nom_comarca: string;\n  data: string;\n  date: Date;\n  year: number;\n  month: number;\n  day: number;\n  dayOfTheWeek: number;\n  weekend: boolean;\n  h01: number | null;\n  h02: number | null;\n  h03: number | null;\n  h04: number | null;\n  h05: number | null;\n  h06: number | null;\n  h07: number | null;\n  h08: number | null;\n  h09: number | null;\n  h10: number | null;\n  h11: number | null;\n  h12: number | null;\n  h13: number | null;\n  h14: number | null;\n  h15: number | null;\n  h16: number | null;\n  h17: number | null;\n  h18: number | null;\n  h19: number | null;\n  h20: number | null;\n  h21: number | null;\n  h22: number | null;\n  h23: number | null;\n  h24: number | null;\n}\n\nexport type StationHistory = StationPoint[];\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"..\";\nimport { getHistory } from \"../history/selectors\";\nimport { FiltersState } from \"./types\";\n\nexport function getFilters(state: RootState): FiltersState {\n  return state.filters;\n}\n\nexport const getFilteredHistory = createSelector(\n  getHistory,\n  getFilters,\n  (history, filters) => {\n    let result = history;\n    const { years, weekdays } = filters;\n\n    result = result.filter((r) => years[r.year - 2010]);\n    result = result.filter((r) => weekdays[r.dayOfTheWeek]);\n\n    return result;\n  }\n);\n","import { RootState } from \"..\";\nimport { HistoryState } from \"./types\";\n\nexport function getHistory(state: RootState): HistoryState {\n  return state.history;\n}\n","import { createSelector } from \"reselect\";\nimport { HOURS } from \"../../types\";\nimport { getFilteredHistory } from \"../filters/selectors\";\nimport { DerivedTable, StatsTable, TableEntry } from \"./types\";\n\nexport const getTable = createSelector(getFilteredHistory, (history) => {\n  const result: StatsTable = [];\n  for (let hourIndex = 0; hourIndex < 24; hourIndex += 1) {\n    result[hourIndex] = [];\n    for (let monthIndex = 0; monthIndex < 12; monthIndex += 1)\n      result[hourIndex][monthIndex] = { count: 0, sum: 0 };\n  }\n\n  history.forEach((point: any) => {\n    const monthIndex = point.month - 1;\n    HOURS.forEach((hour, hourIndex) => {\n      accumulate(result[hourIndex][monthIndex], point[hour]);\n    });\n  });\n\n  return result;\n});\n\nfunction accumulate(previous: TableEntry, newValue: number) {\n  previous.count += 1;\n  previous.sum += newValue;\n}\n\nexport const getAverageTable = createSelector(\n  getTable,\n  (table): DerivedTable =>\n    table.map((row) =>\n      row.map((entry) => {\n        const { count, sum } = entry;\n        if (!count) return null;\n        return Math.floor(sum / count);\n      })\n    )\n);\n","export type StyleColor = string;\nexport type ColorScale = StyleColor[];\n\nexport const NO2_SCALE: ColorScale = [\n  ...range([0, 255, 0], [225, 225, 0], 20),\n  ...range([225, 225, 0], [255, 0, 0], 20),\n  ...range([255, 0, 0], [225, 0, 225], 20),\n  ...range([225, 0, 225], [64, 0, 64], 20),\n];\n\nexport const WHITE: StyleColor = \"rgb(255,255,255)\";\n\nexport function pickColor(scale: ColorScale, value: number | null) {\n  if (value == null) return WHITE;\n  if (value > scale.length) value = scale.length - 1;\n  if (value < 0) value = 0;\n  value = Math.floor(value);\n  return scale[value];\n}\n\ntype Color = [number, number, number];\nfunction range(from: Color, to: Color, steps: number): StyleColor[] {\n  const result: StyleColor[] = [];\n  for (let i = 0; i < steps; i++) {\n    const fb = i / steps;\n    const fa = 1 - fb;\n    result.push(\n      `rgb(${Math.floor(from[0] * fa + to[0] * fb)},${Math.floor(\n        from[1] * fa + to[1] * fb\n      )},${Math.floor(from[2] * fa + to[2] * fb)})`\n    );\n  }\n  return result;\n}\n","import React from \"react\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getAverageTable } from \"../store/table/selectors\";\nimport { HOURS } from \"../types\";\nimport { NO2_SCALE, pickColor } from \"./colorScale\";\nimport styles from \"./TableMonthHour.module.css\";\n\nconst MONTHS = [\n  \"gen\",\n  \"feb\",\n  \"maç\",\n  \"abr\",\n  \"mag\",\n  \"jun\",\n  \"jul\",\n  \"ago\",\n  \"set\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n];\n\nexport function TableMonthHour() {\n  const table = useTypedSelector(getAverageTable);\n\n  return (\n    <table className={styles.table}>\n      <Header />\n      {HOURS.map((hour, hourIndex) => (\n        <RowHour key={hour} hour={hour} hourIndex={hourIndex} table={table} />\n      ))}\n    </table>\n  );\n}\n\nfunction Header() {\n  return (\n    <Row className={styles.header}>\n      <Cell />\n      {MONTHS.map((month, index) => (\n        <Cell key={index}>{month}</Cell>\n      ))}\n    </Row>\n  );\n}\n\nfunction RowHour({ hour, hourIndex, table }: any) {\n  return (\n    <Row>\n      <Cell>{hour}</Cell>\n      {MONTHS.map((_, monthIndex) => (\n        <Cell key={monthIndex} value={table[hourIndex][monthIndex]}>\n          {table[hourIndex][monthIndex]}\n        </Cell>\n      ))}\n    </Row>\n  );\n}\n\nfunction Row({ className, children }: any) {\n  return <div className={`${styles.row} ${className}`}>{children}</div>;\n}\n\nfunction Cell({ children, value }: any) {\n  return (\n    <div\n      className={styles.cell}\n      style={{ backgroundColor: pickColor(NO2_SCALE, value) }}\n    >\n      {children}\n    </div>\n  );\n}\n","import { RootState } from \"..\";\nimport { SourcesState } from \"./types\";\n\nexport function getSources(state: RootState): SourcesState {\n  return state.sources;\n}\n","export interface SourcesState {\n  estacio: string;\n  contaminant: string;\n}\n\nexport const ESTACIO_CHANGED = \"sources/ESTACIO_CHANGED\";\nexport interface EstacioChangedAction {\n  type: typeof ESTACIO_CHANGED;\n  value: string;\n}\n\nexport const CONTAMINANT_CHANGED = \"sources/CONTAMINANT_CHANGED\";\nexport interface ContaminantChangedAction {\n  type: typeof CONTAMINANT_CHANGED;\n  value: string;\n}\n\nexport type SourcesActionTypes =\n  | EstacioChangedAction\n  | ContaminantChangedAction;\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { contaminantChanged } from \"../store/sources/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst contaminants = [\n  //\n  \"NO\",\n  \"NO2\",\n  \"NOX\",\n  \"O3\",\n  \"PM10\",\n  \"H2S\",\n  \"SO2\",\n];\n\nexport function ContaminantChooser() {\n  const { contaminant } = useTypedSelector(getSources);\n\n  return (\n    <ButtonGroup>\n      {contaminants.map((name) => (\n        <Contaminant key={name} name={name} current={contaminant} />\n      ))}\n    </ButtonGroup>\n  );\n}\n\nfunction Contaminant({ name, current }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(contaminantChanged(name)), [name]);\n\n  return (\n    <Button active={name === current} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import {\n  ContaminantChangedAction,\n  CONTAMINANT_CHANGED,\n  EstacioChangedAction,\n  ESTACIO_CHANGED,\n} from \"./types\";\n\nexport function estacioChanged(value: string): EstacioChangedAction {\n  return {\n    type: ESTACIO_CHANGED,\n    value,\n  };\n}\n\nexport function contaminantChanged(value: string): ContaminantChangedAction {\n  return {\n    type: CONTAMINANT_CHANGED,\n    value,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { estacioChanged } from \"../store/sources/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst estacions = [\n  //\n  \"Barberà del Vallès\",\n  \"Barcelona (Poblenou)\",\n  \"Badalona\",\n  \"Manresa\",\n  \"Martorell\",\n  \"Rubí\",\n  \"Santa Perpètua de Mogoda\",\n  \"Sort\",\n];\n\nexport function EstacioChooser() {\n  const { estacio } = useTypedSelector(getSources);\n\n  return (\n    <ListGroup>\n      {estacions.map((name) => (\n        <Estacio key={name} name={name} current={estacio} />\n      ))}\n    </ListGroup>\n  );\n}\n\nfunction Estacio({ name, current }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(estacioChanged(name)), [name]);\n\n  return (\n    <ListGroup.Item action active={name === current} onClick={onClick}>\n      {name}\n    </ListGroup.Item>\n  );\n}\n","export interface FiltersState {\n  weekdays: boolean[];\n  years: boolean[];\n}\n\nexport const WEEKDAY_TOGGLED = \"filters/WEEKDAY_TOGGLED\";\nexport interface WeekdayToggledAction {\n  type: typeof WEEKDAY_TOGGLED;\n  value: number;\n}\n\nexport const YEAR_TOGGLED = \"filters/YEAR_TOGGLED\";\nexport interface YearToggledAction {\n  type: typeof YEAR_TOGGLED;\n  value: number;\n}\n\nexport type FilterActionTypes = WeekdayToggledAction | YearToggledAction;\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getFilters } from \"../store/filters/selectors\";\nimport { weekdayToggled } from \"../store/filters/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst weekdaysNames = [\"\", \"dll\", \"dm\", \"dx\", \"dj\", \"dv\", \"ds\", \"dg\"];\n\nexport function WeekdaysChooser() {\n  const { weekdays } = useTypedSelector(getFilters);\n\n  return (\n    <ButtonGroup>\n      {weekdaysNames.map(\n        (name, index) =>\n          name && (\n            <Weekday\n              key={name}\n              name={name}\n              value={index}\n              active={weekdays[index]}\n            />\n          )\n      )}\n    </ButtonGroup>\n  );\n}\n\nfunction Weekday({ name, value, active }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(weekdayToggled(value)), [\n    value,\n    dispatch,\n  ]);\n\n  return (\n    <Button active={active} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import {\n  WeekdayToggledAction,\n  WEEKDAY_TOGGLED,\n  YearToggledAction,\n  YEAR_TOGGLED,\n} from \"./types\";\n\nexport function weekdayToggled(value: number): WeekdayToggledAction {\n  return {\n    type: WEEKDAY_TOGGLED,\n    value,\n  };\n}\n\nexport function yearToggled(value: number): YearToggledAction {\n  return {\n    type: YEAR_TOGGLED,\n    value,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getFilters } from \"../store/filters/selectors\";\nimport { yearToggled } from \"../store/filters/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst yearsNumbers = new Array<number>(12).fill(2010).map((y, i) => y + i);\n\nexport function YearsChooser() {\n  const { years } = useTypedSelector(getFilters);\n\n  return (\n    <ButtonGroup>\n      {yearsNumbers.map(\n        (name, index) =>\n          name && (\n            <Weekday\n              key={name}\n              name={name}\n              value={index}\n              active={years[index]}\n            />\n          )\n      )}\n    </ButtonGroup>\n  );\n}\n\nfunction Weekday({ name, value, active }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(yearToggled(value)), [\n    value,\n    dispatch,\n  ]);\n\n  return (\n    <Button active={active} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Layout } from \"./components/Layout\";\nimport { TableMonthHour } from \"./components/TableMonthHour\";\nimport { ContaminantChooser } from \"./components/ContaminantChooser\";\nimport { EstacioChooser } from \"./components/EstacioChooser\";\nimport { WeekdaysChooser } from \"./components/WeekdaysChooser\";\nimport { YearsChooser } from \"./components/YearsChooser\";\n\nfunction App() {\n  return (\n    <Layout>\n      <br />\n      <Container>\n        <Row>\n          <Col>\n            <TableMonthHour />\n            <br />\n            <ContaminantChooser />\n            <WeekdaysChooser />\n            <YearsChooser />\n          </Col>\n          <Col>\n            <EstacioChooser />\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FilterActionTypes,\n  FiltersState,\n  WEEKDAY_TOGGLED,\n  YEAR_TOGGLED,\n} from \"./types\";\n\nconst initialState: FiltersState = {\n  weekdays: new Array<boolean>(8).fill(true),\n  years: new Array<boolean>(12).fill(true),\n};\n\nexport function filtersReducer(\n  state = initialState,\n  action: FilterActionTypes\n) {\n  switch (action.type) {\n    case WEEKDAY_TOGGLED:\n      return {\n        ...state,\n        weekdays: state.weekdays.map((active, index) =>\n          index === action.value ? !active : active\n        ),\n      };\n\n    case YEAR_TOGGLED:\n      return {\n        ...state,\n        years: state.years.map((active, index) =>\n          index === action.value ? !active : active\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import localforage from \"localforage\";\nimport { StationHistory } from \"../types\";\n\nexport async function loadHistory(\n  estacio: string,\n  contaminant: string = \"NO2\"\n): Promise<StationHistory> {\n  const key = `estacio:${estacio}#contaminant:${contaminant}`;\n  let csv = (await localforage.getItem(key)) as string;\n  if (!csv) {\n    csv = await loadData(estacio, contaminant);\n    await localforage.setItem(key, csv);\n  }\n\n  const result = parseCsv(csv) as StationHistory;\n  result.forEach((x) => {\n    const date = new Date(x.data);\n    const day = date.getDay();\n\n    x.date = date;\n    x.year = date.getFullYear();\n    x.month = date.getMonth() + 1;\n    x.day = date.getDate();\n    x.dayOfTheWeek = day < 1 ? 7 : day;\n    x.weekend = day === 0 || day === 6;\n\n    x.h01 = toNumber(x.h01);\n    x.h02 = toNumber(x.h02);\n    x.h03 = toNumber(x.h03);\n    x.h04 = toNumber(x.h04);\n    x.h05 = toNumber(x.h05);\n    x.h06 = toNumber(x.h06);\n    x.h07 = toNumber(x.h07);\n    x.h08 = toNumber(x.h08);\n    x.h09 = toNumber(x.h09);\n    x.h10 = toNumber(x.h10);\n    x.h11 = toNumber(x.h11);\n    x.h12 = toNumber(x.h12);\n    x.h13 = toNumber(x.h13);\n    x.h14 = toNumber(x.h14);\n    x.h15 = toNumber(x.h15);\n    x.h16 = toNumber(x.h16);\n    x.h17 = toNumber(x.h17);\n    x.h18 = toNumber(x.h18);\n    x.h19 = toNumber(x.h19);\n    x.h20 = toNumber(x.h20);\n    x.h21 = toNumber(x.h21);\n    x.h22 = toNumber(x.h22);\n    x.h23 = toNumber(x.h23);\n    x.h24 = toNumber(x.h24);\n  });\n\n  return result.filter((x) => x.nom_estacio);\n}\n\nasync function loadData(estacio: string, contaminant: string) {\n  // const data = escape(\n  //   `data between '2010-01-01T00:00:00' and '2021-02-28T00:00:00'AND nom_estacio='${estacio}'AND CONTAMINANT='${contaminant}'`\n  // )\n\n  const data = `data between '2010-01-01T00:00:00' and '2021-02-28T00:00:00'AND nom_estacio='${estacio}'AND CONTAMINANT='${contaminant}'`\n    .replace(/ /g, \"%20\")\n    .replace(/'/g, \"%27\");\n  const url = `https://analisi.transparenciacatalunya.cat/resource/tasf-thgu.csv?$limit=2853004&$offset=0&$where=${data}`;\n\n  const request = await fetch(url);\n  return request.text();\n}\n\nfunction toNumber(x: any) {\n  if (x === \"\") return null;\n  return +x;\n}\n\nfunction parseCsv(csv: string) {\n  const [header, ...lines] = csv\n    .replace(/\"+/g, \"\")\n    .split(\"\\n\")\n    .map((x: string) => x.split(\",\"));\n\n  return lines.map((line) => {\n    const result: any = {};\n    header.forEach((key, index) => {\n      result[key] = line[index];\n    });\n    return result;\n  });\n}\n","import { StationHistory } from \"../../types\";\n\nexport type HistoryState = StationHistory;\n\nexport const HISTORY_CHANGED = \"history/HISTORY_CHANGED\";\nexport interface HistoryChangedAction {\n  type: typeof HISTORY_CHANGED;\n  value: StationHistory;\n}\nexport const LOAD_HISTORY = \"history/LOAD_HISTORY\";\nexport interface LoadHistoryAction {\n  type: typeof LOAD_HISTORY;\n}\n\nexport type HistoryActionTypes = HistoryChangedAction | LoadHistoryAction;\n","import { StationHistory } from \"../../types\";\nimport {\n  HistoryChangedAction,\n  HISTORY_CHANGED,\n  LoadHistoryAction,\n  LOAD_HISTORY,\n} from \"./types\";\n\nexport function historyChanged(value: StationHistory): HistoryChangedAction {\n  return {\n    type: HISTORY_CHANGED,\n    value,\n  };\n}\n\nexport function loadHistory(): LoadHistoryAction {\n  return {\n    type: LOAD_HISTORY,\n  };\n}\n","import { Middleware } from \"redux\";\nimport { RootState } from \"..\";\nimport { loadHistory } from \"../../service/loadHistory\";\nimport { getSources } from \"../sources/selectors\";\nimport {\n  CONTAMINANT_CHANGED,\n  ESTACIO_CHANGED,\n  SourcesActionTypes,\n} from \"../sources/types\";\nimport {\n  historyChanged,\n  loadHistory as createLoadHistoryAction,\n} from \"./actions\";\nimport { HistoryActionTypes, LOAD_HISTORY } from \"./types\";\n\nexport const historyMiddleware: Middleware<{}, RootState> = (store) => (\n  next\n) => async (action: SourcesActionTypes | HistoryActionTypes) => {\n  next(action);\n\n  switch (action.type) {\n    case ESTACIO_CHANGED:\n    case CONTAMINANT_CHANGED: {\n      store.dispatch(createLoadHistoryAction());\n      break;\n    }\n    case LOAD_HISTORY: {\n      const { estacio, contaminant } = getSources(store.getState());\n      const history = await loadHistory(estacio, contaminant);\n      store.dispatch(historyChanged(history));\n      break;\n    }\n\n    default:\n    // nothing to do\n  }\n};\n","import { HISTORY_CHANGED, HistoryActionTypes, HistoryState } from \"./types\";\n\nconst initialState: HistoryState = [];\n\nexport function historyReducer(\n  state = initialState,\n  action: HistoryActionTypes\n) {\n  switch (action.type) {\n    case HISTORY_CHANGED:\n      return action.value;\n    default:\n      return state;\n  }\n}\n","import {\n  CONTAMINANT_CHANGED,\n  ESTACIO_CHANGED,\n  SourcesActionTypes,\n  SourcesState,\n} from \"./types\";\n\nconst initialState: SourcesState = {\n  contaminant: \"NO2\",\n  // contaminant: \"PM10\",\n  estacio: \"Barcelona (Poblenou)\",\n};\n\nexport function sourcesReducer(\n  state = initialState,\n  action: SourcesActionTypes\n) {\n  switch (action.type) {\n    case CONTAMINANT_CHANGED:\n      return { ...state, contaminant: action.value };\n    case ESTACIO_CHANGED:\n      return { ...state, estacio: action.value };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { filtersReducer } from \"./filters/reducers\";\nimport { historyMiddleware } from \"./history/middleware\";\nimport { historyReducer } from \"./history/reducers\";\nimport { sourcesReducer } from \"./sources/reducers\";\n\nexport const rootReducer = combineReducers({\n  filters: filtersReducer,\n  history: historyReducer,\n  sources: sourcesReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(historyMiddleware))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootswatch/dist/litera/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { loadHistory } from \"./store/history/actions\";\n\nstore.dispatch(loadHistory());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}