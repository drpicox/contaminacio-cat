{"version":3,"sources":["components/TableMonthHour.module.css","components/Layout.tsx","store/hooks.ts","store/sources/selectors.ts","types.ts","store/filters/selectors.ts","store/history/selectors.ts","store/table/selectors.ts","components/colorScale.ts","components/TableMonthHour.tsx","components/TableMonthHourAverage.tsx","components/TableMonthHourMax.tsx","components/TableMonthHourOver.tsx","components/TableMonthHourChooser.tsx","store/sources/types.ts","components/ContaminantChooser.tsx","store/sources/actions.ts","components/EstacioChooser.tsx","service/loadEstacions.ts","store/filters/types.ts","components/WeekdaysChooser.tsx","store/filters/actions.ts","components/YearsChooser.tsx","App.tsx","reportWebVitals.ts","store/filters/reducers.ts","service/loadHistory.ts","store/history/types.ts","store/history/actions.ts","store/history/middleware.ts","store/history/reducers.ts","store/sources/reducers.ts","store/index.ts","index.tsx"],"names":["module","exports","NavLink","to","children","className","Layout","Navbar","bg","Nav","useTypedSelector","useSelector","getSources","state","sources","HOURS","getFilters","filters","getFilteredHistory","createSelector","history","result","years","weekdays","filter","r","year","dayOfTheWeek","getTable","hourIndex","monthIndex","count","sum","values","forEach","point","month","hour","previous","newValue","push","BLACK_COLOR","WHITE_STYLE","backgroundColor","color","SCALES","scaleBySteps","PM10","O3","NO2","SO2","OVER","pickStyle","scale","value","length","Math","floor","range","from","steps","i","fb","fa","red","green","blue","max","MONTHS","TableMonthHour","table","styles","Header","map","RowHour","header","Cell","index","_","Row","row","cell","style","getAverageTable","entry","TableMonthHourAverage","contaminant","getMaxTable","TableMonthHourMax","getOverTable","v","TableMonthHourOver","s","TableMonthHourChooser","useState","setTable","setMax","estacio","ButtonGroup","Button","active","onClick","min","type","onChange","ev","target","ESTACIO_CHANGED","CONTAMINANT_CHANGED","contaminants","ContaminantChooser","name","Contaminant","current","dispatch","useDispatch","useCallback","estacions","EstacioChooser","setFilter","InputGroup","Prepend","Text","FormControl","placeholder","ListGroup","maxHeight","overflow","toLowerCase","includes","Estacio","Item","action","WEEKDAY_TOGGLED","YEAR_TOGGLED","YEAR_SELECTED","weekdaysNames","WeekdaysChooser","Weekday","weekdayToggled","yearsNumbers","Array","fill","y","YearsChooser","slice","Year","shiftKey","yearToggled","yearSelected","App","Container","Col","sm","md","lg","xl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","TODAY","Date","toISOString","loadHistory","a","key","localforage","getItem","csv","loadData","setItem","parseCsv","x","date","data","day","getDay","getFullYear","getMonth","getDate","weekend","h01","toNumber","h02","h03","h04","h05","h06","h07","h08","h09","h10","h11","h12","h13","h14","h15","h16","h17","h18","h19","h20","h21","h22","h23","h24","nom_estacio","replace","url","fetch","request","text","split","line","HISTORY_CHANGED","LOAD_HISTORY","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","next","createLoadHistoryAction","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,IAAM,4BAA4B,OAAS,+BAA+B,KAAO,+B,wKCGzI,SAASC,EAAT,GAA+E,IAA5DC,EAA2D,EAA3DA,GAAIC,EAAuD,EAAvDA,SACrB,OACE,cAAC,IAAD,CAAMC,UAAU,WAAWF,GAAIA,EAA/B,SACGC,IAKA,SAASE,EAAT,GAA8D,IAA5CF,EAA2C,EAA3CA,SACvB,OACE,qCACE,cAACG,EAAA,EAAD,CAAQC,GAAG,UAAX,SACE,cAACC,EAAA,EAAD,UACE,cAACP,EAAD,CAASC,GAAG,IAAZ,kCAGHC,K,oCCjBMM,EAAoDC,ICA1D,SAASC,EAAWC,GACzB,OAAOA,EAAMC,Q,YCJFC,EAAQ,CACnB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OCnBK,SAASC,EAAWH,GACzB,OAAOA,EAAMI,QAGR,IAAMC,EAAqBC,aCN3B,SAAoBN,GACzB,OAAOA,EAAMO,UDObJ,GACA,SAACI,EAASH,GACR,IAAII,EAASD,EACLE,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAKf,OAFAF,GADAA,EAASA,EAAOG,QAAO,SAACC,GAAD,OAAOH,EAAMG,EAAEC,KAAO,UAC7BF,QAAO,SAACC,GAAD,OAAOF,EAASE,EAAEE,oBEXhCC,EAAWT,YAAeD,GAAoB,SAACE,GAE1D,IADA,IAAMC,EAAqB,GAClBQ,EAAY,EAAGA,EAAY,GAAIA,GAAa,EAAG,CACtDR,EAAOQ,GAAa,GACpB,IAAK,IAAIC,EAAa,EAAGA,EAAa,GAAIA,GAAc,EACtDT,EAAOQ,GAAWC,GAAc,CAAEC,MAAO,EAAGC,IAAK,EAAGC,OAAQ,IAUhE,OAPAb,EAAQc,SAAQ,SAACC,GACf,IAAML,EAAaK,EAAMC,MAAQ,EACjCrB,EAAMmB,SAAQ,SAACG,EAAMR,GAQzB,IAAoBS,EAAsBC,EAAtBD,EAPHjB,EAAOQ,GAAWC,GAOOS,EAPMJ,EAAME,GAQpDC,EAASP,OAAS,EAClBO,EAASN,KAAOO,EAChBD,EAASL,OAAOO,KAAKD,SANdlB,K,YCjBIoB,EAAc,kBAEdC,EAA0B,CACrCC,gBAAiB,mBACjBC,MAAOH,GAIII,EAAqC,CAChD,QAASC,EAAa,IACtBC,KAAMD,EAAa,IACnBE,GAAIF,EAAa,IAAM,GACvBG,IAAKH,EAAa,IAClBI,IAAKJ,EAAa,IAClBK,KAAML,EAAa,KAGd,SAASM,EAAUC,EAAmBC,GAC3C,OAAa,MAATA,EAAsBZ,GACtBY,EAAQD,EAAME,SAAQD,EAAQD,EAAME,OAAS,GAC7CD,EAAQ,IAAGA,EAAQ,GAEhBD,EADPC,EAAQE,KAAKC,MAAMH,KAKrB,SAASI,EAAMC,EAAaxD,EAAWyD,GAErC,IADA,IAAMvC,EAAuB,GACpBwC,EAAI,EAAGA,EAAID,EAAOC,IAAK,CAC9B,IAAMC,EAAKD,EAAID,EACTG,EAAK,EAAID,EACTE,EAAMR,KAAKC,MAAME,EAAK,GAAKI,EAAK5D,EAAG,GAAK2D,GACxCG,EAAQT,KAAKC,MAAME,EAAK,GAAKI,EAAK5D,EAAG,GAAK2D,GAC1CI,EAAOV,KAAKC,MAAME,EAAK,GAAKI,EAAK5D,EAAG,GAAK2D,GACzCnB,EAAe,cAAUqB,EAAV,YAAiBC,EAAjB,YAA0BC,EAA1B,KACftB,EAAQoB,EAAMC,EAAQC,EAAO,IApCZ,wBAoCgCzB,EAEvDpB,EAAOmB,KAAK,CAAEG,kBAAiBC,UAEjC,OAAOvB,EAGT,SAASyB,EAAaqB,GACpB,MAAM,GAAN,mBACKT,EAAM,CAAC,EAAG,IAAK,GAAI,CAAC,IAAK,IAAK,GAAIS,EAAM,IAD7C,YAEKT,EAAM,CAAC,IAAK,IAAK,GAAI,CAAC,IAAK,EAAG,GAAIS,EAAM,IAF7C,YAGKT,EAAM,CAAC,IAAK,EAAG,GAAI,CAAC,IAAK,EAAG,KAAMS,EAAM,IAH7C,YAIKT,EAAM,CAAC,IAAK,EAAG,KAAM,CAAC,GAAI,EAAG,IAAKS,EAAM,IAJ7C,YAKKT,EAAM,CAAC,GAAI,EAAG,IAAK,CAAC,GAAI,EAAG,GAAI,O,qBC/ChCU,EAAS,CACb,MACA,MACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGK,SAASC,EAAT,GAAgD,IAAtBC,EAAqB,EAArBA,MAAOjB,EAAc,EAAdA,MACtC,OACE,wBAAOhD,UAAWkE,IAAOD,MAAzB,UACE,cAACE,EAAD,IACCzD,EAAM0D,KAAI,SAACpC,EAAMR,GAAP,OACT,cAAC6C,EAAD,CAEErC,KAAMA,EACNR,UAAWA,EACXyC,MAAOA,EACPjB,MAAOA,GAJFhB,SAWf,SAASmC,IACP,OACE,eAAC,EAAD,CAAKnE,UAAWkE,IAAOI,OAAvB,UACE,cAACC,EAAD,IACCR,EAAOK,KAAI,SAACrC,EAAOyC,GAAR,OACV,cAACD,EAAD,UAAmBxC,GAARyC,SAMnB,SAASH,EAAT,GAA0D,IAAvCrC,EAAsC,EAAtCA,KAAMR,EAAgC,EAAhCA,UAAWyC,EAAqB,EAArBA,MAAOjB,EAAc,EAAdA,MACzC,OACE,eAAC,EAAD,WACE,cAACuB,EAAD,UAAOvC,IACN+B,EAAOK,KAAI,SAACK,EAAGhD,GAAJ,OACV,cAAC8C,EAAD,CAEEvB,MAAOA,EACPC,MAAOgB,EAAMzC,GAAWC,GAH1B,SAKGwC,EAAMzC,GAAWC,IAJbA,SAWf,SAASiD,EAAT,GAA4C,IAA7B1E,EAA4B,EAA5BA,UAAWD,EAAiB,EAAjBA,SACxB,OAAO,qBAAKC,UAAS,UAAKkE,IAAOS,IAAZ,YAAmB3E,GAAjC,SAA+CD,IAGxD,SAASwE,EAAT,GAAgD,IAAhCxE,EAA+B,EAA/BA,SAAUkD,EAAqB,EAArBA,MAAOD,EAAc,EAAdA,MAC/B,OACE,qBAAKhD,UAAWkE,IAAOU,KAAMC,MAAO9B,EAAUC,EAAOC,GAArD,SACGlD,IC/DA,IAAM+E,EAAkBhE,YAC7BS,GACA,SAAC0C,GAAD,OACEA,EAAMG,KAAI,SAACO,GAAD,OACRA,EAAIP,KAAI,SAACW,GAAW,IACVrD,EAAeqD,EAAfrD,MAAOC,EAAQoD,EAARpD,IACf,OAAKD,EACEyB,KAAKC,MAAMzB,EAAMD,GADL,cAMpB,SAASsD,IACd,IAAMf,EAAQ5D,EAAiByE,GACvBG,EAAgB5E,EAAiBE,GAAjC0E,YACFjC,EAAQR,EAAOyC,GAErB,OAAO,cAACjB,EAAD,CAAgBC,MAAOA,EAAOjB,MAAOA,ICjBvC,IAAMkC,EAAcpE,YACzBS,GACA,SAAC0C,GAAD,OACEA,EAAMG,KAAI,SAACO,GAAD,OACRA,EAAIP,KAAI,SAACW,GAAW,IACVrD,EAAkBqD,EAAlBrD,MAAOE,EAAWmD,EAAXnD,OAEf,OAAKF,EACEyB,KAAKW,IAAL,MAAAX,KAAI,YAAQvB,IADA,cAMpB,SAASuD,IACd,IAAMlB,EAAQ5D,EAAiB6E,GACvBD,EAAgB5E,EAAiBE,GAAjC0E,YACFjC,EAAQR,EAAOyC,GAErB,OAAO,cAACjB,EAAD,CAAgBC,MAAOA,EAAOjB,MAAOA,ICnBvC,IAAMoC,EAAetE,YAC1BS,GACA,SAACkD,EAAD,YAAWX,OACX,SAACG,EAAOH,GAAR,OACEG,EAAMG,KAAI,SAACO,GAAD,OACRA,EAAIP,KAAI,SAACW,GAAW,IACVrD,EAAkBqD,EAAlBrD,MAAOE,EAAWmD,EAAXnD,OAEf,OAAKF,EACEE,EAAOT,QAAO,SAACkE,GAAD,OAAOA,GAAKvB,KAAKZ,OADnB,cAMpB,SAASoC,EAAT,GAA2C,IAAbxB,EAAY,EAAZA,IAC7BG,EAAQ5D,GAAiB,SAACkF,GAAD,OAAOH,EAAaG,EAAG,CAAEzB,WAExD,OAAO,cAACE,EAAD,CAAgBC,MAAOA,EAAOjB,MAAOR,EAAOM,OCjB9C,SAAS0C,IAAyB,IAAD,EACZC,mBAAS,WADG,mBAC/BxB,EAD+B,KACxByB,EADwB,OAEhBD,mBAAS,IAFO,mBAE/B3B,EAF+B,KAE1B6B,EAF0B,KAG9BC,EAAYvF,EAAiBE,GAA7BqF,QAER,OACE,qCACGA,EADH,IACY,uBACV,eAACC,EAAA,EAAD,CAAa7F,UAAU,YAAvB,UACE,cAAC8F,EAAA,EAAD,CACEC,OAAkB,YAAV9B,EACR+B,QAAS,kBAAMN,EAAS,YAF1B,qBAMA,cAACI,EAAA,EAAD,CAAQC,OAAkB,QAAV9B,EAAiB+B,QAAS,kBAAMN,EAAS,QAAzD,sBAGA,eAACI,EAAA,EAAD,CAAQC,OAAkB,SAAV9B,EAAkB+B,QAAS,kBAAMN,EAAS,SAA1D,0BACgB,IACd,uBACEO,IAAI,IACJnC,IAAI,MACJoC,KAAK,SACLjD,MAAOa,EACPqC,SAAU,SAACC,GAAD,OAAQT,GAAQS,EAAGC,OAAOpD,gBAI/B,YAAVgB,GAAuB,cAACe,EAAD,IACb,QAAVf,GAAmB,cAACkB,EAAD,IACT,SAAVlB,GAAoB,cAACqB,EAAD,CAAoBxB,IAAKA,OClC7C,IAAMwC,EAAkB,0BAMlBC,EAAsB,8BCJnC,IAAMC,EAAe,CAEnB,MACA,KACA,QACA,OACA,OAGK,SAASC,IAAsB,IAC5BxB,EAAgB5E,EAAiBE,GAAjC0E,YAER,OACE,cAACY,EAAA,EAAD,UACGW,EAAapC,KAAI,SAACsC,GAAD,OAChB,cAACC,EAAD,CAAwBD,KAAMA,EAAME,QAAS3B,GAA3ByB,QAM1B,SAASC,EAAT,GAA8C,IAAvBD,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,QACrBC,EAAWC,cACXd,EAAUe,uBAAY,kBAAMF,ECf3B,CACLX,KAAMK,EACNtD,MDa4DyD,MAAQ,CACpEG,EACAH,IAGF,OACE,cAACZ,EAAA,EAAD,CAAQC,OAAQW,IAASE,EAASZ,QAASA,EAA3C,SACGU,I,4DE7BP,IAAMM,GCRmB,CACvB,WACA,UACA,UACA,UACA,WACA,2BACA,yBACA,uBACA,uCACA,gCACA,0BACA,+BACA,uBACA,sBACA,oBACA,0BACA,2BACA,QACA,sBACA,QACA,wBACA,uBACA,qBACA,sBACA,oBACA,eACA,iDACA,WACA,0BACA,qCACA,2CACA,iCACA,oCACA,eACA,8BACA,OACA,0CACA,UACA,UACA,oCACA,uBACA,+BACA,6BACA,aACA,6BACA,+BACA,WACA,kCACA,2BACA,mBACA,mCACA,2BACA,cACA,cACA,4BACA,SACA,UACA,UACA,YACA,YACA,uBACA,oBACA,oCACA,6CACA,UACA,yBACA,8BACA,WACA,0BACA,QACA,OACA,WACA,UACA,WACA,oCACA,2BACA,4BACA,8BACA,0BACA,YACA,8BACA,cACA,2BACA,uCACA,6BACA,oCACA,4BACA,oCACA,mBACA,qBAC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","file":"static/js/main.53e10bd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableMonthHour_table__1pQAj\",\"row\":\"TableMonthHour_row__1V9aJ\",\"header\":\"TableMonthHour_header__3KzZq\",\"cell\":\"TableMonthHour_cell__2Rx8e\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction NavLink({ to, children }: { to: string; children: React.ReactNode }) {\n  return (\n    <Link className=\"nav-link\" to={to}>\n      {children}\n    </Link>\n  );\n}\n\nexport function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      <Navbar bg=\"primary\">\n        <Nav>\n          <NavLink to=\"/\">Contaminacio-Cat</NavLink>\n        </Nav>\n      </Navbar>\n      {children}\n    </>\n  );\n}\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport { RootState } from \"./index\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from \"..\";\nimport { SourcesState } from \"./types\";\n\nexport function getSources(state: RootState): SourcesState {\n  return state.sources;\n}\n","export const HOURS = [\n  \"h01\",\n  \"h02\",\n  \"h03\",\n  \"h04\",\n  \"h05\",\n  \"h06\",\n  \"h07\",\n  \"h08\",\n  \"h09\",\n  \"h10\",\n  \"h11\",\n  \"h12\",\n  \"h13\",\n  \"h14\",\n  \"h15\",\n  \"h16\",\n  \"h17\",\n  \"h18\",\n  \"h19\",\n  \"h20\",\n  \"h21\",\n  \"h22\",\n  \"h23\",\n  \"h24\",\n];\n\nexport interface StationPoint {\n  nom_estacio: string;\n  altitud: string;\n  latitud: string;\n  longitud: string;\n  magnitud: string;\n  contaminant: string;\n  unitats: string;\n  tipus_estacio: string;\n  area_urbana: string;\n  codi_ine: string;\n  municipi: string;\n  codi_comarca: string;\n  nom_comarca: string;\n  data: string;\n  date: Date;\n  year: number;\n  month: number;\n  day: number;\n  dayOfTheWeek: number;\n  weekend: boolean;\n  h01: number | null;\n  h02: number | null;\n  h03: number | null;\n  h04: number | null;\n  h05: number | null;\n  h06: number | null;\n  h07: number | null;\n  h08: number | null;\n  h09: number | null;\n  h10: number | null;\n  h11: number | null;\n  h12: number | null;\n  h13: number | null;\n  h14: number | null;\n  h15: number | null;\n  h16: number | null;\n  h17: number | null;\n  h18: number | null;\n  h19: number | null;\n  h20: number | null;\n  h21: number | null;\n  h22: number | null;\n  h23: number | null;\n  h24: number | null;\n}\n\nexport type StationHistory = StationPoint[];\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"..\";\nimport { getHistory } from \"../history/selectors\";\nimport { FiltersState } from \"./types\";\n\nexport function getFilters(state: RootState): FiltersState {\n  return state.filters;\n}\n\nexport const getFilteredHistory = createSelector(\n  getHistory,\n  getFilters,\n  (history, filters) => {\n    let result = history;\n    const { years, weekdays } = filters;\n\n    result = result.filter((r) => years[r.year - 2010]);\n    result = result.filter((r) => weekdays[r.dayOfTheWeek]);\n\n    return result;\n  }\n);\n","import { RootState } from \"..\";\nimport { HistoryState } from \"./types\";\n\nexport function getHistory(state: RootState): HistoryState {\n  return state.history;\n}\n","import { createSelector } from \"reselect\";\nimport { ImportsNotUsedAsValues } from \"typescript\";\nimport { HOURS } from \"../../types\";\nimport { getFilteredHistory } from \"../filters/selectors\";\nimport { StatsTable, TableEntry } from \"./types\";\n\nexport const getTable = createSelector(getFilteredHistory, (history) => {\n  const result: StatsTable = [];\n  for (let hourIndex = 0; hourIndex < 24; hourIndex += 1) {\n    result[hourIndex] = [];\n    for (let monthIndex = 0; monthIndex < 12; monthIndex += 1)\n      result[hourIndex][monthIndex] = { count: 0, sum: 0, values: [] };\n  }\n\n  history.forEach((point: any) => {\n    const monthIndex = point.month - 1;\n    HOURS.forEach((hour, hourIndex) => {\n      accumulate(result[hourIndex][monthIndex], point[hour]);\n    });\n  });\n\n  return result;\n});\n\nfunction accumulate(previous: TableEntry, newValue: number) {\n  previous.count += 1;\n  previous.sum += newValue;\n  previous.values.push(newValue);\n}\n","export type StyleColor = { backgroundColor: string; color: string };\nexport type ColorScale = StyleColor[];\n\nexport const WHITE_COLOR = \"rgba(255,255,255,0.9)\";\nexport const BLACK_COLOR = \"rgba(0,0,0,0.9)\";\n\nexport const WHITE_STYLE: StyleColor = {\n  backgroundColor: \"rgb(255,255,255)\",\n  color: BLACK_COLOR,\n};\n\n// https://www.who.int/news-room/fact-sheets/detail/ambient-(outdoor)-air-quality-and-health\nexport const SCALES: Record<string, ColorScale> = {\n  \"PM2.5\": scaleBySteps(10),\n  PM10: scaleBySteps(20),\n  O3: scaleBySteps(100 / 3),\n  NO2: scaleBySteps(40),\n  SO2: scaleBySteps(20 / 2),\n  OVER: scaleBySteps(10),\n};\n\nexport function pickStyle(scale: ColorScale, value: number | null) {\n  if (value == null) return WHITE_STYLE;\n  if (value > scale.length) value = scale.length - 1;\n  if (value < 0) value = 0;\n  value = Math.floor(value);\n  return scale[value];\n}\n\ntype Color = [number, number, number];\nfunction range(from: Color, to: Color, steps: number): StyleColor[] {\n  const result: StyleColor[] = [];\n  for (let i = 0; i < steps; i++) {\n    const fb = i / steps;\n    const fa = 1 - fb;\n    const red = Math.floor(from[0] * fa + to[0] * fb);\n    const green = Math.floor(from[1] * fa + to[1] * fb);\n    const blue = Math.floor(from[2] * fa + to[2] * fb);\n    const backgroundColor = `rgb(${red},${green},${blue})`;\n    const color = red + green + blue < 225 ? WHITE_COLOR : BLACK_COLOR;\n\n    result.push({ backgroundColor, color });\n  }\n  return result;\n}\n\nfunction scaleBySteps(max: number) {\n  return [\n    ...range([0, 255, 0], [225, 225, 0], max / 2),\n    ...range([225, 225, 0], [255, 0, 0], max / 2),\n    ...range([255, 0, 0], [225, 0, 225], max / 2),\n    ...range([225, 0, 225], [64, 0, 64], max / 2),\n    ...range([64, 0, 64], [16, 0, 8], 150),\n  ];\n}\n","import React from \"react\";\nimport { HOURS } from \"../types\";\nimport { pickStyle } from \"./colorScale\";\nimport styles from \"./TableMonthHour.module.css\";\n\nconst MONTHS = [\n  \"gen\",\n  \"feb\",\n  \"maç\",\n  \"abr\",\n  \"mag\",\n  \"jun\",\n  \"jul\",\n  \"ago\",\n  \"set\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n];\n\nexport function TableMonthHour({ table, scale }: any) {\n  return (\n    <table className={styles.table}>\n      <Header />\n      {HOURS.map((hour, hourIndex) => (\n        <RowHour\n          key={hour}\n          hour={hour}\n          hourIndex={hourIndex}\n          table={table}\n          scale={scale}\n        />\n      ))}\n    </table>\n  );\n}\n\nfunction Header() {\n  return (\n    <Row className={styles.header}>\n      <Cell />\n      {MONTHS.map((month, index) => (\n        <Cell key={index}>{month}</Cell>\n      ))}\n    </Row>\n  );\n}\n\nfunction RowHour({ hour, hourIndex, table, scale }: any) {\n  return (\n    <Row>\n      <Cell>{hour}</Cell>\n      {MONTHS.map((_, monthIndex) => (\n        <Cell\n          key={monthIndex}\n          scale={scale}\n          value={table[hourIndex][monthIndex]}\n        >\n          {table[hourIndex][monthIndex]}\n        </Cell>\n      ))}\n    </Row>\n  );\n}\n\nfunction Row({ className, children }: any) {\n  return <div className={`${styles.row} ${className}`}>{children}</div>;\n}\n\nfunction Cell({ children, value, scale }: any) {\n  return (\n    <div className={styles.cell} style={pickStyle(scale, value)}>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getTable } from \"../store/table/selectors\";\nimport { DerivedTable } from \"../store/table/types\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { SCALES } from \"./colorScale\";\nimport { TableMonthHour } from \"./TableMonthHour\";\n\nexport const getAverageTable = createSelector(\n  getTable,\n  (table): DerivedTable =>\n    table.map((row) =>\n      row.map((entry) => {\n        const { count, sum } = entry;\n        if (!count) return null;\n        return Math.floor(sum / count);\n      })\n    )\n);\n\nexport function TableMonthHourAverage() {\n  const table = useTypedSelector(getAverageTable);\n  const { contaminant } = useTypedSelector(getSources);\n  const scale = SCALES[contaminant];\n\n  return <TableMonthHour table={table} scale={scale} />;\n}\n","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getTable } from \"../store/table/selectors\";\nimport { DerivedTable } from \"../store/table/types\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { SCALES } from \"./colorScale\";\nimport { TableMonthHour } from \"./TableMonthHour\";\n\nexport const getMaxTable = createSelector(\n  getTable,\n  (table): DerivedTable =>\n    table.map((row) =>\n      row.map((entry) => {\n        const { count, values } = entry;\n\n        if (!count) return null;\n        return Math.max(...values);\n      })\n    )\n);\n\nexport function TableMonthHourMax() {\n  const table = useTypedSelector(getMaxTable);\n  const { contaminant } = useTypedSelector(getSources);\n  const scale = SCALES[contaminant];\n\n  return <TableMonthHour table={table} scale={scale} />;\n}\n","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getTable } from \"../store/table/selectors\";\nimport { DerivedTable } from \"../store/table/types\";\nimport { SCALES } from \"./colorScale\";\nimport { TableMonthHour } from \"./TableMonthHour\";\n\nexport const getOverTable = createSelector(\n  getTable,\n  (_: any, { max }: any) => max,\n  (table, max): DerivedTable =>\n    table.map((row) =>\n      row.map((entry) => {\n        const { count, values } = entry;\n\n        if (!count) return null;\n        return values.filter((v) => v >= max).length;\n      })\n    )\n);\n\nexport function TableMonthHourOver({ max }: any) {\n  const table = useTypedSelector((s) => getOverTable(s, { max }));\n\n  return <TableMonthHour table={table} scale={SCALES.OVER} />;\n}\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { TableMonthHourAverage } from \"./TableMonthHourAverage\";\nimport { TableMonthHourMax } from \"./TableMonthHourMax\";\nimport { TableMonthHourOver } from \"./TableMonthHourOver\";\n\nexport function TableMonthHourChooser() {\n  const [table, setTable] = useState(\"Average\");\n  const [max, setMax] = useState(50);\n  const { estacio } = useTypedSelector(getSources);\n\n  return (\n    <>\n      {estacio} <br />\n      <ButtonGroup className=\"mb-2 mt-1\">\n        <Button\n          active={table === \"Average\"}\n          onClick={() => setTable(\"Average\")}\n        >\n          Mitjana\n        </Button>\n        <Button active={table === \"Max\"} onClick={() => setTable(\"Max\")}>\n          Màxim\n        </Button>\n        <Button active={table === \"Over\"} onClick={() => setTable(\"Over\")}>\n          #per sobre de{\" \"}\n          <input\n            min=\"0\"\n            max=\"200\"\n            type=\"number\"\n            value={max}\n            onChange={(ev) => setMax(+ev.target.value)}\n          />\n        </Button>\n      </ButtonGroup>\n      {table === \"Average\" && <TableMonthHourAverage />}\n      {table === \"Max\" && <TableMonthHourMax />}\n      {table === \"Over\" && <TableMonthHourOver max={max} />}\n    </>\n  );\n}\n","export interface SourcesState {\n  estacio: string;\n  contaminant: string;\n}\n\nexport const ESTACIO_CHANGED = \"sources/ESTACIO_CHANGED\";\nexport interface EstacioChangedAction {\n  type: typeof ESTACIO_CHANGED;\n  value: string;\n}\n\nexport const CONTAMINANT_CHANGED = \"sources/CONTAMINANT_CHANGED\";\nexport interface ContaminantChangedAction {\n  type: typeof CONTAMINANT_CHANGED;\n  value: string;\n}\n\nexport type SourcesActionTypes =\n  | EstacioChangedAction\n  | ContaminantChangedAction;\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { contaminantChanged } from \"../store/sources/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst contaminants = [\n  //\n  \"NO2\",\n  \"O3\",\n  \"PM2.5\",\n  \"PM10\",\n  \"SO2\",\n];\n\nexport function ContaminantChooser() {\n  const { contaminant } = useTypedSelector(getSources);\n\n  return (\n    <ButtonGroup>\n      {contaminants.map((name) => (\n        <Contaminant key={name} name={name} current={contaminant} />\n      ))}\n    </ButtonGroup>\n  );\n}\n\nfunction Contaminant({ name, current }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(contaminantChanged(name)), [\n    dispatch,\n    name,\n  ]);\n\n  return (\n    <Button active={name === current} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import {\n  ContaminantChangedAction,\n  CONTAMINANT_CHANGED,\n  EstacioChangedAction,\n  ESTACIO_CHANGED,\n} from \"./types\";\n\nexport function estacioChanged(value: string): EstacioChangedAction {\n  return {\n    type: ESTACIO_CHANGED,\n    value,\n  };\n}\n\nexport function contaminantChanged(value: string): ContaminantChangedAction {\n  return {\n    type: CONTAMINANT_CHANGED,\n    value,\n  };\n}\n","import React, { useCallback, useState } from \"react\";\nimport { FormControl, InputGroup, ListGroup } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getSources } from \"../store/sources/selectors\";\nimport { estacioChanged } from \"../store/sources/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { ESTACIONS } from \"../service/loadEstacions\";\n\nconst estacions = ESTACIONS;\n\nexport function EstacioChooser() {\n  const [filter, setFilter] = useState(\"\");\n  const { estacio } = useTypedSelector(getSources);\n\n  return (\n    <>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>🔎</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"Nom d'estació\"\n          value={filter}\n          onChange={(ev) => setFilter(ev.target.value)}\n        />\n      </InputGroup>\n      <ListGroup style={{ maxHeight: \"370px\", overflow: \"scroll\" }}>\n        {estacions\n          .filter(\n            (name) =>\n              !filter || name.toLowerCase().includes(filter.toLowerCase())\n          )\n          .map((name) => (\n            <Estacio key={name} name={name} current={estacio} />\n          ))}\n      </ListGroup>\n    </>\n  );\n}\n\nfunction Estacio({ name, current }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(estacioChanged(name)), [name]);\n\n  return (\n    <ListGroup.Item action active={name === current} onClick={onClick}>\n      {name}\n    </ListGroup.Item>\n  );\n}\n","export const ESTACIONS = [\n  \"Agullana\",\n  \"Alcanar\",\n  \"Alcover\",\n  \"Amposta\",\n  \"Badalona\",\n  \"Barberà del Vallès\",\n  \"Barcelona (Ciutadella)\",\n  \"Barcelona (Eixample)\",\n  \"Barcelona (Gràcia - Sant Gervasi)\",\n  \"Barcelona (Observatori Fabra)\",\n  \"Barcelona (Palau Reial)\",\n  \"Barcelona (Parc Vall Hebron)\",\n  \"Barcelona (Poblenou)\",\n  \"Barcelona (Sagrera)\",\n  \"Barcelona (Sants)\",\n  \"Barcelona (St. Gervasi)\",\n  \"Barcelona (Torre Girona)\",\n  \"Begur\",\n  \"Bellver de Cerdanya\",\n  \"Berga\",\n  \"Castellet i la Gornal\",\n  \"Cercs (Sant Corneli)\",\n  \"Cercs (Sant Jordi)\",\n  \"Cercs (St. Corneli)\",\n  \"Cercs (St. Jordi)\",\n  \"Constantí\",\n  \"Cornellà de Llobregat (Allende - Bonveí)\",\n  \"Cubelles\",\n  \"Cubelles (Poliesportiu)\",\n  \"el Prat de Llobregat (església)\",\n  \"El Prat de Llobregat (Jardins de la Pau)\",\n  \"El Prat de Llobregat (Sagnier)\",\n  \"el Prat de Llobregat (Sant Cosme)\",\n  \"Els Guiamets\",\n  \"Fígols (roca del Querol)\",\n  \"Flix\",\n  \"Fornells de la Selva (escola municipal)\",\n  \"Gandesa\",\n  \"Gavà\",\n  \"Gavà (c/Girona - c/Progrés)\",\n  \"Gavà (pl. Balmes)\",\n  \"Girona (Escola de Música)\",\n  \"Girona (parc de la Devesa)\",\n  \"Granollers\",\n  \"Granollers (av. Joan Prim)\",\n  \"Granollers (c/ Joan Vinyoli)\",\n  \"Igualada\",\n  \"Juneda (ctra. de Lleida, km 75)\",\n  \"Juneda (Pla del Molí)\",\n  \"L'Ametlla de Mar\",\n  \"la Nou de Berguedà (Malanyeu)\",\n  \"la Pobla de M./el Morell\",\n  \"la Sénia\",\n  \"La Sénia\",\n  \"L'Hospitalet de Llobregat\",\n  \"Lleida\",\n  \"Manlleu\",\n  \"Manresa\",\n  \"Martorell\",\n  \"Mataró\",\n  \"Mollet del Vallès\",\n  \"Montcada i Reixac\",\n  \"Montcada i Reixac (Can Sant Joan)\",\n  \"Montornès del Vallès (pl. del Poble)\",\n  \"Montsec\",\n  \"Montseny (La Castanya)\",\n  \"Pallejà (Roca de Vilana)\",\n  \"Pardines\",\n  \"Perafort (Puigdelfí)\",\n  \"Ponts\",\n  \"Reus\",\n  \"Ripollet\",\n  \"Rubí\",\n  \"Sabadell\",\n  \"Sabadell (pl. Creu de Barberà)\",\n  \"Santa Coloma de Gramenet\",\n  \"Sant Adrià de Besòs\",\n  \"Santa Maria de Palautordera\",\n  \"Sant Andreu de la Barca\",\n  \"Santa Pau\",\n  \"Santa Perpètua de Mogoda\",\n  \"Sant Celoni\",\n  \"Sant Cugat del Vallès\",\n  \"Sant Feliu de Ll. (CEIP Marti i Pol)\",\n  \"Sant Fost de Campsentelles\",\n  \"Sant Just Desvern (CEIP Montseny)\",\n  \"Sant Vicenç dels Horts\",\n  \"Sant Vicenç dels Horts (Ribot)\",\n  \"Sarrià de Ter\",\n  \"Sitges (Vallcarca)\",\n  \"Sitges (Vallcarca - Oficines)\",\n  \"Sort\",\n  \"Sta. Coloma de Gr. (c/ Bruc)\",\n  \"Sta. Margarida i els Monjos (La Ràpita)\",\n  \"Sta. Perpètua de Mogoda\",\n  \"Tarragona (Bonavista)\",\n  \"Tarragona (Parc de la Ciutat)\",\n  \"Tarragona (pl. Generalitat)\",\n  \"Tarragona (Sant Salvador)\",\n  \"Tarragona (Universitat Laboral)\",\n  \"Terrassa\",\n  \"Tona\",\n  \"Tona (Zona Esportiva)\",\n  \"Vallcebre\",\n  \"Vallcebre (campanar)\",\n  \"Vandellòs (Barranc del Terme)\",\n  \"Vandellòs (Els Dedalts)\",\n  \"Vandellòs (Viver)\",\n  \"Veciana (estació agroalimentària)\",\n  \"Vic\",\n  \"Viladecans\",\n  \"Viladecans - Atrium\",\n  \"Vilafranca del Penedès\",\n  \"Vilanova i la Geltrú\",\n  \"Vila-seca\",\n  \"Vila-seca (IES Vila-seca)\",\n];\n\nexport async function loadEstacions() {\n  const request = await fetch(\n    \"http://mediambient.gencat.cat/.content/getData.jsp?cargaEstacions=true&uuid=47d68ac0-bf76-11ea-a226-005056924a59\",\n    {\n      headers: {\n        accept: \"text/html, */*; q=0.01\",\n        \"accept-language\": \"en-US,en;q=0.9,ca;q=0.8,en-GB;q=0.7,es;q=0.6\",\n        \"cache-control\": \"no-cache\",\n        pragma: \"no-cache\",\n        \"sec-gpc\": \"1\",\n        \"x-requested-with\": \"XMLHttpRequest\",\n      },\n      referrer:\n        \"http://mediambient.gencat.cat/ca/05_ambits_dactuacio/atmosfera/qualitat_de_laire/vols-saber-que-respires/descarrega-de-dades/\",\n      referrerPolicy: \"strict-origin-when-cross-origin\",\n      body: null,\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"include\",\n    }\n  );\n  return request.text();\n}\n","export interface FiltersState {\n  weekdays: boolean[];\n  years: boolean[];\n}\n\nexport const WEEKDAY_TOGGLED = \"filters/WEEKDAY_TOGGLED\";\nexport interface WeekdayToggledAction {\n  type: typeof WEEKDAY_TOGGLED;\n  value: number;\n}\n\nexport const YEAR_TOGGLED = \"filters/YEAR_TOGGLED\";\nexport interface YearToggledAction {\n  type: typeof YEAR_TOGGLED;\n  value: number;\n}\n\nexport const YEAR_SELECTED = \"filters/YEAR_SELECTED\";\nexport interface YearSelectedAction {\n  type: typeof YEAR_SELECTED;\n  value: number;\n}\n\nexport type FilterActionTypes =\n  | WeekdayToggledAction\n  | YearToggledAction\n  | YearSelectedAction;\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getFilters } from \"../store/filters/selectors\";\nimport { weekdayToggled } from \"../store/filters/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst weekdaysNames = [\"\", \"dll\", \"dm\", \"dx\", \"dj\", \"dv\", \"ds\", \"dg\"];\n\nexport function WeekdaysChooser() {\n  const { weekdays } = useTypedSelector(getFilters);\n\n  return (\n    <ButtonGroup>\n      {weekdaysNames.map(\n        (name, index) =>\n          name && (\n            <Weekday\n              key={name}\n              name={name}\n              value={index}\n              active={weekdays[index]}\n            />\n          )\n      )}\n    </ButtonGroup>\n  );\n}\n\nfunction Weekday({ name, value, active }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => dispatch(weekdayToggled(value)), [\n    value,\n    dispatch,\n  ]);\n\n  return (\n    <Button active={active} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import {\n  WeekdayToggledAction,\n  WEEKDAY_TOGGLED,\n  YearToggledAction,\n  YEAR_TOGGLED,\n  YearSelectedAction,\n  YEAR_SELECTED,\n} from \"./types\";\n\nexport function weekdayToggled(value: number): WeekdayToggledAction {\n  return {\n    type: WEEKDAY_TOGGLED,\n    value,\n  };\n}\n\nexport function yearToggled(value: number): YearToggledAction {\n  return {\n    type: YEAR_TOGGLED,\n    value,\n  };\n}\n\nexport function yearSelected(value: number): YearSelectedAction {\n  return {\n    type: YEAR_SELECTED,\n    value,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { useTypedSelector } from \"../store/hooks\";\nimport { getFilters } from \"../store/filters/selectors\";\nimport { yearSelected, yearToggled } from \"../store/filters/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst yearsNumbers = new Array<number>(14).fill(2010).map((y, i) => y + i);\n\nexport function YearsChooser() {\n  const { years } = useTypedSelector(getFilters);\n\n  return (\n    <>\n      <ButtonGroup>\n        {yearsNumbers\n          .slice(0, 7)\n          .map(\n            (name, index) =>\n              name && (\n                <Year\n                  key={name}\n                  name={name}\n                  value={index}\n                  active={years[index]}\n                />\n              )\n          )}\n      </ButtonGroup>\n      <ButtonGroup>\n        {yearsNumbers\n          .slice(7)\n          .map(\n            (name, index) =>\n              name && (\n                <Year\n                  key={name}\n                  name={name}\n                  value={index + 7}\n                  active={years[index + 7]}\n                />\n              )\n          )}\n      </ButtonGroup>\n    </>\n  );\n}\n\nfunction Year({ name, value, active }: any) {\n  const dispatch = useDispatch();\n  const onClick = useCallback(\n    (ev) => {\n      if (ev.shiftKey) dispatch(yearToggled(value));\n      else dispatch(yearSelected(value));\n    },\n    [value, dispatch]\n  );\n\n  return (\n    <Button active={active} onClick={onClick}>\n      {name}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Layout } from \"./components/Layout\";\nimport { TableMonthHourChooser } from \"./components/TableMonthHourChooser\";\nimport { ContaminantChooser } from \"./components/ContaminantChooser\";\nimport { EstacioChooser } from \"./components/EstacioChooser\";\nimport { WeekdaysChooser } from \"./components/WeekdaysChooser\";\nimport { YearsChooser } from \"./components/YearsChooser\";\n\nfunction App() {\n  return (\n    <Layout>\n      <br />\n      <Container>\n        <Row>\n          <Col sm md lg xl>\n            <TableMonthHourChooser />\n            <br />\n            <ContaminantChooser />\n            <br />\n            <WeekdaysChooser />\n            <br />\n            <YearsChooser />\n          </Col>\n          <Col sm md lg xl>\n            <EstacioChooser />\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FilterActionTypes,\n  FiltersState,\n  WEEKDAY_TOGGLED,\n  YEAR_SELECTED,\n  YEAR_TOGGLED,\n} from \"./types\";\n\nconst initialState: FiltersState = {\n  weekdays: new Array<boolean>(8).fill(true),\n  years: new Array<boolean>(14).fill(true),\n};\n\nexport function filtersReducer(\n  state = initialState,\n  action: FilterActionTypes\n) {\n  switch (action.type) {\n    case WEEKDAY_TOGGLED:\n      return {\n        ...state,\n        weekdays: state.weekdays.map((active, index) =>\n          index === action.value ? !active : active\n        ),\n      };\n\n    case YEAR_TOGGLED:\n      return {\n        ...state,\n        years: state.years.map((active, index) =>\n          index === action.value ? !active : active\n        ),\n      };\n    case YEAR_SELECTED:\n      return {\n        ...state,\n        years: state.years.map((active, index) =>\n          index === action.value ? true : false\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import localforage from \"localforage\";\nimport { StationHistory } from \"../types\";\n\nconst TODAY = new Date().toISOString().slice(0, 13) + \":00:00\";\n\nexport async function loadHistory(\n  estacio: string,\n  contaminant: string = \"NO2\"\n): Promise<StationHistory> {\n  const key = `estacio:${estacio}#contaminant:${contaminant}:${TODAY}`;\n  let csv = (await localforage.getItem(key)) as string;\n  if (!csv) {\n    csv = await loadData(estacio, contaminant);\n    await localforage.setItem(key, csv);\n  }\n\n  const result = parseCsv(csv) as StationHistory;\n  result.forEach((x) => {\n    const date = new Date(x.data);\n    const day = date.getDay();\n\n    x.date = date;\n    x.year = date.getFullYear();\n    x.month = date.getMonth() + 1;\n    x.day = date.getDate();\n    x.dayOfTheWeek = day < 1 ? 7 : day;\n    x.weekend = day === 0 || day === 6;\n\n    x.h01 = toNumber(x.h01);\n    x.h02 = toNumber(x.h02);\n    x.h03 = toNumber(x.h03);\n    x.h04 = toNumber(x.h04);\n    x.h05 = toNumber(x.h05);\n    x.h06 = toNumber(x.h06);\n    x.h07 = toNumber(x.h07);\n    x.h08 = toNumber(x.h08);\n    x.h09 = toNumber(x.h09);\n    x.h10 = toNumber(x.h10);\n    x.h11 = toNumber(x.h11);\n    x.h12 = toNumber(x.h12);\n    x.h13 = toNumber(x.h13);\n    x.h14 = toNumber(x.h14);\n    x.h15 = toNumber(x.h15);\n    x.h16 = toNumber(x.h16);\n    x.h17 = toNumber(x.h17);\n    x.h18 = toNumber(x.h18);\n    x.h19 = toNumber(x.h19);\n    x.h20 = toNumber(x.h20);\n    x.h21 = toNumber(x.h21);\n    x.h22 = toNumber(x.h22);\n    x.h23 = toNumber(x.h23);\n    x.h24 = toNumber(x.h24);\n  });\n\n  return result.filter((x) => x.nom_estacio);\n}\n\nasync function loadData(estacio: string, contaminant: string) {\n  // const data = escape(\n  //   `data between '2010-01-01T00:00:00' and '2021-02-28T00:00:00'AND nom_estacio='${estacio}'AND CONTAMINANT='${contaminant}'`\n  // )\n\n  const data =\n    `data between '2010-01-01T00:00:00' and '${TODAY}'AND nom_estacio='${estacio}'AND CONTAMINANT='${contaminant}'`\n      .replace(/ /g, \"%20\")\n      .replace(/'/g, \"%27\");\n  const url = `https://analisi.transparenciacatalunya.cat/resource/tasf-thgu.csv?$limit=2853004&$offset=0&$where=${data}`;\n\n  const request = await fetch(url);\n  return request.text();\n}\n\nfunction toNumber(x: any) {\n  if (x === \"\") return null;\n  return +x;\n}\n\nfunction parseCsv(csv: string) {\n  const [header, ...lines] = csv\n    .replace(/\"+/g, \"\")\n    .split(\"\\n\")\n    .map((x: string) => x.split(\",\"));\n\n  return lines.map((line) => {\n    const result: any = {};\n    header.forEach((key, index) => {\n      result[key] = line[index];\n    });\n    return result;\n  });\n}\n","import { StationHistory } from \"../../types\";\n\nexport type HistoryState = StationHistory;\n\nexport const HISTORY_CHANGED = \"history/HISTORY_CHANGED\";\nexport interface HistoryChangedAction {\n  type: typeof HISTORY_CHANGED;\n  value: StationHistory;\n}\nexport const LOAD_HISTORY = \"history/LOAD_HISTORY\";\nexport interface LoadHistoryAction {\n  type: typeof LOAD_HISTORY;\n}\n\nexport type HistoryActionTypes = HistoryChangedAction | LoadHistoryAction;\n","import { StationHistory } from \"../../types\";\nimport {\n  HistoryChangedAction,\n  HISTORY_CHANGED,\n  LoadHistoryAction,\n  LOAD_HISTORY,\n} from \"./types\";\n\nexport function historyChanged(value: StationHistory): HistoryChangedAction {\n  return {\n    type: HISTORY_CHANGED,\n    value,\n  };\n}\n\nexport function loadHistory(): LoadHistoryAction {\n  return {\n    type: LOAD_HISTORY,\n  };\n}\n","import { Middleware } from \"redux\";\nimport { RootState } from \"..\";\nimport { loadHistory } from \"../../service/loadHistory\";\nimport { getSources } from \"../sources/selectors\";\nimport {\n  CONTAMINANT_CHANGED,\n  ESTACIO_CHANGED,\n  SourcesActionTypes,\n} from \"../sources/types\";\nimport {\n  historyChanged,\n  loadHistory as createLoadHistoryAction,\n} from \"./actions\";\nimport { HistoryActionTypes, LOAD_HISTORY } from \"./types\";\n\nexport const historyMiddleware: Middleware<{}, RootState> = (store) => (\n  next\n) => async (action: SourcesActionTypes | HistoryActionTypes) => {\n  next(action);\n\n  switch (action.type) {\n    case ESTACIO_CHANGED:\n    case CONTAMINANT_CHANGED: {\n      store.dispatch(createLoadHistoryAction());\n      break;\n    }\n    case LOAD_HISTORY: {\n      const { estacio, contaminant } = getSources(store.getState());\n      const history = await loadHistory(estacio, contaminant);\n      store.dispatch(historyChanged(history));\n      break;\n    }\n\n    default:\n    // nothing to do\n  }\n};\n","import { HISTORY_CHANGED, HistoryActionTypes, HistoryState } from \"./types\";\n\nconst initialState: HistoryState = [];\n\nexport function historyReducer(\n  state = initialState,\n  action: HistoryActionTypes\n) {\n  switch (action.type) {\n    case HISTORY_CHANGED:\n      return action.value;\n    default:\n      return state;\n  }\n}\n","import {\n  CONTAMINANT_CHANGED,\n  ESTACIO_CHANGED,\n  SourcesActionTypes,\n  SourcesState,\n} from \"./types\";\n\nconst initialState: SourcesState = {\n  contaminant: \"NO2\",\n  // contaminant: \"PM10\",\n  estacio: \"Barcelona (Poblenou)\",\n};\n\nexport function sourcesReducer(\n  state = initialState,\n  action: SourcesActionTypes\n) {\n  switch (action.type) {\n    case CONTAMINANT_CHANGED:\n      return { ...state, contaminant: action.value };\n    case ESTACIO_CHANGED:\n      return { ...state, estacio: action.value };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { filtersReducer } from \"./filters/reducers\";\nimport { historyMiddleware } from \"./history/middleware\";\nimport { historyReducer } from \"./history/reducers\";\nimport { sourcesReducer } from \"./sources/reducers\";\n\nexport const rootReducer = combineReducers({\n  filters: filtersReducer,\n  history: historyReducer,\n  sources: sourcesReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(historyMiddleware))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootswatch/dist/litera/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { loadHistory } from \"./store/history/actions\";\n\nstore.dispatch(loadHistory());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}